# backend/.env.example
# -----------------------------------------------------------------------------
# EXAMPLE ENVIRONMENT CONFIGURATION FOR PAPRI AI PROJECT
#
# Instructions:
# 1. Copy this file to a new file named '.env' in the same directory (backend/).
# 2. Fill in your actual secret keys, passwords, and configuration values in '.env'.
# 3. The '.env' file is ignored by Git (see .gitignore) and should NEVER be committed.
# -----------------------------------------------------------------------------

# --- Django Core Settings ---
DJANGO_SECRET_KEY="your_very_strong_and_long_random_secret_key_here_please_change_me"
DEBUG=True  # Set to False for production environments
DJANGO_ALLOWED_HOSTS="localhost,127.0.0.1" # Comma-separated list of allowed hostnames/IPs for production (e.g., "papri.site,www.papri.site")
TIME_ZONE="Africa/Nairobi" # Your application's default timezone (see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)

# --- Database Configuration (MySQL Example) ---
DB_ENGINE="django.db.backends.mysql"
DB_NAME="papri_db"
DB_USER="papri_user"
DB_PASSWORD="your_secure_database_password"
DB_HOST="127.0.0.1"  # Or your database server address (e.g., RDS endpoint)
DB_PORT="3306"       # Default MySQL port

# --- Celery Asynchronous Task Queue Settings ---
# Example using Redis as broker and result backend:
CELERY_BROKER_URL="redis://localhost:6379/0"
CELERY_RESULT_BACKEND="django-db" # Using django-celery-results; or use "redis://localhost:6379/1" for Redis backend

# --- Email Configuration (for Django Allauth, notifications, etc.) ---
# For development (emails printed to console):
EMAIL_BACKEND="django.core.mail.backends.console.EmailBackend"
# For production (e.g., using SendGrid, AWS SES, or other SMTP provider):
# EMAIL_BACKEND="django.core.mail.backends.smtp.EmailBackend"
# EMAIL_HOST="smtp.example.com"
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_HOST_USER="your_smtp_username_or_apikey"
# EMAIL_HOST_PASSWORD="your_smtp_password_or_apikey"
DEFAULT_FROM_EMAIL="Papri AI Support <noreply@yourpaprisite.com>" # Sender address for automated emails
PAPRI_BASE_URL="http://localhost:8000" # Your site's full base URL (used for links in emails)

# --- CORS (Cross-Origin Resource Sharing) Settings ---
# For production, list your frontend domain(s) if served separately.
# Example: "http://localhost:3001,https://app.papri.site,https://www.papri.site"
# If frontend is served by Django on the same domain, this might not be strictly needed or can be more restrictive.
# In settings.py, DEBUG=True often sets CORS_ALLOW_ALL_ORIGINS=True. This is for production:
CORS_ALLOWED_ORIGINS="" # Comma-separated list of allowed origins for production

# --- External API Keys ---
YOUTUBE_API_KEY="AIzaSy_YOUR_YOUTUBE_DATA_API_KEY_HERE"
VIMEO_ACCESS_TOKEN="your_vimeo_api_access_token" # If using direct token for Vimeo API
# VIMEO_CLIENT_ID="your_vimeo_client_id_for_oauth" # If using OAuth2 for Vimeo
# VIMEO_CLIENT_SECRET="your_vimeo_client_secret_for_oauth" # If using OAuth2 for Vimeo
DAILYMOTION_API_URL="https://api.dailymotion.com" # Default Dailymotion API URL
# DAILYMOTION_API_KEY="" # If you have a specific API key for Dailymotion

# --- Payment Gateway: Paystack ---
# IMPORTANT: Replace placeholders below with your ACTUAL LIVE Paystack keys in your private .env file.
# The keys you provided were:
# Public Key: pk_live_4ef8c26b9967897df499fd9e771ac01ee4c891bd
# Secret Key: sk_live_0c3da04666b76661701af2f1127bf8985d8ff2db
PAYSTACK_SECRET_KEY="sk_live_YOUR_ACTUAL_PAYSTACK_LIVE_SECRET_KEY"
PAYSTACK_PUBLIC_KEY="pk_live_YOUR_ACTUAL_PAYSTACK_LIVE_PUBLIC_KEY"
# Frontend URLs for payment redirects (ensure these match your frontend routing)
PAYMENT_SUCCESS_REDIRECT_URL="/app/#payment-success" # Example route in your SPA
PAYMENT_FAILED_REDIRECT_URL="/app/#payment-failed"   # Example route in your SPA
SIGNUP_CODE_EXPIRY_DAYS=7 # How long a generated signup code is valid

# --- Vector Database (Qdrant Example) ---
QDRANT_URL="http://localhost:6333" # URL of your Qdrant instance
QDRANT_API_KEY=""                  # API key if your Qdrant instance is secured
QDRANT_COLLECTION_TRANSCRIPTS="papri_transcripts_v1" # Name for transcript embeddings collection
QDRANT_COLLECTION_VISUAL="papri_visuals_v1"         # Name for visual embeddings collection

# --- AI Model Configuration ---
# Names of pre-trained models (Hugging Face model IDs or local paths if applicable)
SENTENCE_TRANSFORMER_MODEL="all-MiniLM-L6-v2" # Example sentence embedding model
VISUAL_CNN_MODEL_NAME="EfficientNetV2S"        # Example CNN for visual features (e.g., "ResNet50")

# --- Social Authentication (Google OAuth2 Example) ---
# Get these credentials from Google Cloud Console -> APIs & Services -> Credentials
GOOGLE_OAUTH_CLIENT_ID="your-google-client-id.apps.googleusercontent.com"
GOOGLE_OAUTH_CLIENT_SECRET="your-google-client-secret-from-google-cloud"
ACCOUNT_EMAIL_VERIFICATION="optional" # Allauth setting: 'mandatory', 'optional', or 'none'

# --- Scraper and Content Fetching Configuration ---
MAX_API_RESULTS_PER_SOURCE=7    # Max items to fetch per API source (e.g., YouTube) in one go
MAX_SCRAPED_ITEMS_PER_SOURCE=5  # Max items to fetch per scraped source (e.g., a PeerTube instance)
SCRAPE_INTER_PLATFORM_DELAY_SECONDS=2 # Polite delay between accessing different external platforms

# Define scrapeable platforms as a JSON string. Each object in the list should define:
# - name: Human-readable name for the platform instance (e.g., "PeerTube Videos XYZ")
# - spider_name: The Scrapy spider to use (e.g., "peertube")
# - base_url: The base URL of the platform instance (e.g., "https://peertube.example.com")
# - search_path_template: URL path for searching, with "{query}" as placeholder for the URL-encoded search term
#                         (e.g., "/api/v1/search/videos?search={query}&nsfw=false&sort=-match")
# - is_active: true or false (boolean) to enable/disable scraping this source
# - platform_identifier: A unique slug for this platform source (e.g., "peertube_example_com")
# - default_listing_url: (Optional) A URL to fetch recent/popular videos if no search query is provided
SCRAPEABLE_PLATFORMS_JSON='[{"name": "PeerTube (TilVids Example)", "spider_name": "peertube", "base_url": "https://tilvids.com", "search_path_template": "/api/v1/search/videos?search={query}&nsfw=false&sort=-match", "is_active": true, "platform_identifier": "peertube_tilvids", "default_listing_url": "https://tilvids.com/videos/recently-added"}]'
# Add more platform configurations to the JSON array as needed. Remember to escape quotes if putting this directly in shell.

# --- Other Application-Specific Settings ---
MAX_DEMO_SEARCHES=3 # Number of free demo searches allowed on the landing page
API_BASE_URL_FRONTEND="" # For JavaScript: If empty, assumes API is on same host (e.g., /api/).
                         # If API is on a different host/port during dev, set full URL e.g., "http://localhost:8000/api".
                         # For production, if API and frontend are on same domain, empty is usually fine.

# Django Logging Levels (DEBUG, INFO, WARNING, ERROR, CRITICAL)
# DJANGO_LOG_LEVEL_ROOT="WARNING" # Default for Django's root logger
# DJANGO_LOG_LEVEL_DJANGO="INFO"  # For Django specific logs
# Papri app specific log levels are often set to DEBUG in settings.py if DEBUG=True
